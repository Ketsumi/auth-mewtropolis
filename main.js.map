{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-crypto.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.sass","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/callback/callback.component.html","webpack:///./src/app/callback/callback.component.sass","webpack:///./src/app/callback/callback.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.sass","webpack:///./src/app/login/login.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Base64 } from 'js-base64';\r\nimport { Observable } from 'rxjs';\r\nimport RandomBytes from 'randombytes';\r\nimport SHA from 'sha.js';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppCryptoService {\r\n\tconstructor(private http: HttpClient) { }\r\n\r\n\tpublic encode(message): string {\r\n\t\treturn Base64.encodeURI(message);\r\n\t}\r\n\r\n\tpublic decode(message): string {\r\n\t\treturn Base64.decode(message);\r\n\t}\r\n\r\n\tpublic sha256(message): string {\r\n\t\treturn SHA('sha256').update(message).digest('hex');\r\n\t}\r\n\r\n\tpublic randomBytes(bytes=32): string {\r\n\t\treturn RandomBytes(bytes);\r\n\t}\r\n\r\n\tpublic random(bytes=32): string {\r\n\t\treturn Base64.encodeURI(RandomBytes(bytes));\r\n\t}\r\n\r\n\tpublic codeChallenge(randomData=null): string {\r\n\t\tconst data = randomData ? randomData : RandomBytes(32);\r\n\r\n\t\treturn Base64.encodeURI(SHA('sha256').update(data).digest('hex'));\r\n\t}\r\n\r\n\tpublic generateUrl(uri: string): Observable<any> {\r\n\t\treturn this.http.get(uri);\r\n\t}\r\n\r\n\tpublic getParameter(parameters: string, key: string) {\r\n\t\tconst params = parameters[0] === '?' ? parameters.substring(1) : parameters;\r\n\t\tconst paramsObj = new URLSearchParams(params);\r\n\r\n\t\treturn paramsObj.get(key);\r\n\t}\r\n\r\n\t// public setStorage(key: string = \"null\", value: string = \"null\") {\r\n\t// \tconst obj = JSON.stringify({ gator: \"gao\", duck: \"quack\", exp: Date.now()+180000 });\r\n\r\n\t// \t// localStorage.setItem(\"cat\", \"meow\");\r\n\t// \t// localStorage.setItem(\"cow\", \"moo\");\r\n\t// \t// localStorage.setItem(\"animals\", obj);\r\n\t// \tconsole.log(window.localStorage);\r\n\t// \t// console.log(obj);\r\n\t// \t// console.log(JSON.parse(obj));\r\n\t// \t// console.log(window.localStorage['animals']);\r\n\t// }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CallbackComponent } from './callback/callback.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n\t{ path: '', component: LoginComponent },\r\n\t{ path: 'login', component: LoginComponent },\r\n\t{ path: 'callback', component: CallbackComponent },\r\n\t{ path: '**', redirectTo: '/login', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'auth-mewtropolis';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CallbackComponent } from './callback/callback.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CallbackComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<p>\\n  callback works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { AppCryptoService } from '../app-crypto.service';\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: ['./callback.component.sass']\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  constructor(private AppCrypto: AppCryptoService) { }\r\n\r\n  ngOnInit() {\r\n  \ttry {\r\n  \t\tconsole.log(this.AppCrypto.getParameter(window.location.search, 'state'));\r\n  \t\t// this.AppCrypto.setStorage();\r\n  \t} catch (err) {\r\n  \t\tconsole.log(err.message);\r\n  \t}\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  login works!\\r\\n</p>\\r\\n\\r\\n<button (click)=\\\"redirect()\\\">Google Login</button>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { AppCryptoService } from '../app-crypto.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.sass']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  private url;\r\n\r\n  constructor(private AppCrypto: AppCryptoService) {\r\n  \tthis.url = 'https://auth.mewtropolis.me/api/auth/google';\r\n  }\r\n\r\n  ngOnInit() {\r\n  \ttry {\r\n  \t\t// const randomData = this.AppCrypto.randomBytes(32);\r\n  \t\t// const challenge = this.AppCrypto.codeChallenge();\r\n  \t\t// const urlTest = 'https://accounts.google.com/o/oauth2/v2/auth?client_id=986484840298-7sk3u5a07btmvpl4r4uqi0s5m9qrnljo.apps.googleusercontent.com&scope=openid&response_type=code%20id_token&redirect_uri=http%3A%2F%2Fauth.mewtropolis.me%2Fapi%2Fauth%2Fcallback&state=7wn9Muc7EA7RA7uN_dRj3UXfPy8pdnnLtxtV7DauzJ0&nonce=livC9NI01e40v0t4kUfWJCQ9bN7N1j0_d8TQxAnrCos';\r\n\r\n  \t\t// console.log('test: randombytes');\r\n  \t\t// console.log(`${randomData}\\n\\n`);\r\n\r\n  \t\t// console.log('test: random');\r\n  \t\t// console.log(`${this.AppCrypto.random(32)}\\n\\n`);\r\n\r\n  \t\t// console.log('test: codeChallenge');\r\n  \t\t// console.log(`${challenge}\\n\\n`);\r\n  \t\t// console.log(`${this.AppCrypto.decode(challenge)}`);\r\n  \t\t// console.log(`${this.AppCrypto.getParameter(urlTest, 'state')}`);\r\n  \t\t\r\n  \t} catch (err) {\r\n  \t\tconsole.log(err.message);\r\n  \t}\r\n  }\r\n\r\n  private redirect(): void {\r\n  \tconst crypto = this.AppCrypto;\r\n  \tconst nonce = crypto.codeChallenge(); // url-safe Base64 hash\r\n\r\n  \tcrypto.generateUrl(this.url).subscribe(data => {\r\n  \t\tconst { redirectUrl, ...rest } = data;\r\n  \t\tconst stateParams = JSON.stringify(data); // data that holds state\r\n  \t\tconst state = crypto.getParameter(redirectUrl, 'state');\r\n\r\n  \t\tredirectUrl.replace(state, nonce); // uses nonce as the state\r\n  \t\tlocalStorage.setItem(nonce, stateParams);\r\n\r\n  \t\tconsole.log(`state:\\n${state}`);\r\n  \t\tconsole.log(`nonce:\\n${nonce}`);\r\n  \t\tconsole.log(redirectUrl); // used to redirect to google auth page\r\n  \t});\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}